<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>clapwatermelon</title>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <link>http://localhost:4000/</link>
    <description>A website with blog posts and pages</description>
    <pubDate>Fri, 06 Apr 2018 21:56:18 +0900</pubDate>
    
      <item>
        <title>Operating Systems 1 - Computer Organization</title>
        <link>/2018/04/06/Operating-Systems.html</link>
        <guid isPermaLink="true">/2018/04/06/Operating-Systems.html</guid>
        <description>&lt;h2 id=&quot;what-is-an-operating-system&quot;&gt;What is an Operating System?&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;Help the user use computer easily (Interface)&lt;/li&gt;
  &lt;li&gt;Help the software use computer resource&lt;/li&gt;
  &lt;li&gt;Help the programmer develop software (API)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;OS : software와 hardware 사이의 소통을 도움&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;von-neumann-machine&quot;&gt;Von Neumann Machine&lt;/h3&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;Pre-Von-Neumann Machine:
    &lt;ul&gt;
      &lt;li&gt;A computer can do only single computation&lt;/li&gt;
      &lt;li&gt;Program = HW, Data in memory&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Von-Neumann Machine
    &lt;ul&gt;
      &lt;li&gt;General purpose computer&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Program in memory&lt;/strong&gt;, Data in memory&lt;/li&gt;
      &lt;li&gt;Called stored-program architecture&lt;/li&gt;
      &lt;li&gt;Good: re=program easily&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;이전의 폰노이만 머신에서는 프로그램은 하드웨어에, 데이터는 메모리에 따로 존재했었다면 폰 노이만 머신에서는 프로그램과 데이터가 메모리 안에 들어감으로써 프로그램을 좀 더 쉽게 할 수 있게 되었다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/post_img/VNA.png&quot; alt=&quot;VNA&quot; title=&quot;Von Neumann Architecture&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;registers&quot;&gt;Registers&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;입출력(I/O)을 위한 저장공간
&lt;img src=&quot;/assets/post_img/Registers.png&quot; alt=&quot;Registers&quot; title=&quot;Registers&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Program Counter: 다음 수행할 명령어가 어디인지 주소를 저장&lt;/li&gt;
  &lt;li&gt;Instruction Register: 현재 실행하고 있는 명령어&lt;/li&gt;
  &lt;li&gt;MBR:가져온 주소로 가서 data를 넣음&lt;/li&gt;
  &lt;li&gt;MAR: 가져온 주소를 써 놓는 곳&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;problem-1-of-von-neumann&quot;&gt;Problem 1 of Von-Neumann&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;Problem: Von Neumann Bottleneck = Bus&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Too much to move over bus: slow (좋은 CPU 여도 Bus도 좋아야 빠르다)
Solution: Cache&lt;/li&gt;
  &lt;li&gt;Temporary fast memory with recent data/program&lt;/li&gt;
  &lt;li&gt;Code optimization&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Bus에 병목현상이 생기는 문제점을 일시적으로 최근 데이터를 Cache에 저장&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;problem-2-of-von-neumann&quot;&gt;Problem 2 of Von-Neumann&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;Problem: Program &amp;amp; Data in same memory&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A program can mess-up instructions in memory
Solution: Harvard Architecture&lt;/li&gt;
  &lt;li&gt;Separate data and program memory&lt;/li&gt;
  &lt;li&gt;Memory restriction: Prevent accessing memory outside data&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;program과 data가 같은 메모리안에 있게되면 data에 접근할 때 program도 접근이 가능하여 안정성이나 보안도 떨어지게 되고 또한 프로그램은 메모리에 엉망인 명령들을 내려 망가뜨릴 수 있는 가능성이 있다. 아래의 이미지를통해 폰노이만과 하버드의 구조적 차이를 보면 이해가 빠르다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/post_img/harvardA.png&quot; alt=&quot;harvardArchitecture&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;problem-3-of-von-neumann&quot;&gt;Problem 3 of Von-Neumann&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;Problem: Program &amp;amp; Data over ther same bus&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Different fetch rate, slow bus
Solution: Harvard Architecture&lt;/li&gt;
  &lt;li&gt;Seperate data and program bus&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Problem 2 와 Problem 3 은 같은 문제라고 볼 수 있다. 즉, Program과 Data가 같이 들어있기 때문에 발생된 문제이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;how-a-computer-can-do-many-things-simultaneously&quot;&gt;How a computer can do many things simultaneously?&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;Interrupts&lt;/p&gt;

&lt;h3 id=&quot;interrupts&quot;&gt;Interrupts&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;Provided to improve processor utilization&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;most I/O devices are slower than the processor&lt;/li&gt;
  &lt;li&gt;processor must pause to wait for device&lt;/li&gt;
  &lt;li&gt;wasterful use of the processor&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;CPU가 프로그램을 실행하고 있을 때, 입출력 하드웨어 등의 장치나 또는 예외상황이 발생하여 처리가 필요할 경우 CPU에 알려 처리할 수 있도록 하는 것&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;memory-hierarchy&quot;&gt;Memory Hierarchy&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;memory&quot;&gt;Memory&lt;/h3&gt;
&lt;p&gt;Major constraints in memory&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;amount&lt;/li&gt;
  &lt;li&gt;speed&lt;/li&gt;
  &lt;li&gt;expense
Memory must be able to keep up with the processor
Cost of memory must be reasonable in relationship to the other componets&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-memory-hierarchy&quot;&gt;The Memory Hierarchy&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;/assets/post_img/memoryHierarchy.png&quot; alt=&quot;memoryHierarchy&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;위로 갈 수록 빠르고 비쌈, 용량은 적고 속도 빨라짐, 사용 빈도 높아짐&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Going down the hierarchy:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;decreasing cost per bit&lt;/li&gt;
  &lt;li&gt;increasing capacity&lt;/li&gt;
  &lt;li&gt;increasing access time&lt;/li&gt;
  &lt;li&gt;decreasing frequency of access to the memory by the processor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Inboard memory:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Registers&lt;/li&gt;
  &lt;li&gt;Cache&lt;/li&gt;
  &lt;li&gt;Main Memory&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Outboard Storage:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Magnetic Disk, CD-ROM . .&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;principle-of-locality&quot;&gt;Principle of Locality&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;컴퓨터 프로그램의 메모리 접근 패턴이 시 공간적으로 근접한 모습을 보이는 경향이 크다 이것을 근접성의 원칙이라고 한다.
Fact: Memory references by the processor tend to cluster in time and space&lt;/p&gt;

&lt;p&gt;How to exploit it:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Data is organized so that the percentage of accesses to each successively lower level is substantially less than that of the level above&lt;/li&gt;
  &lt;li&gt;Can be applied across more than two levels of memory&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cache-memory&quot;&gt;Cache memory&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;Invisible to the processors, programmer, OS
Interacts with other memory management hardware
Reasons for its existence:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Processor must access memory at least once per instruction cycle&lt;/li&gt;
  &lt;li&gt;Processor execution is limited by memory cycle time&lt;/li&gt;
  &lt;li&gt;Exploit the principle of locality with a small, fast memory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/post_img/CacheOrganization.png&quot; alt=&quot;Cache&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;위 그림에서와 같이 Main memory에서 Block 단위로 가져오는 것을 알 수있다.
동대문에서 옷을 가져와서 팔려할 때 티한장 가져와서 팔고 또 한장 가져와서 팔고 할 수 없으니 통째(Block)로 가져와서 파는 것&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;replacement-algorithm&quot;&gt;Replacement Algorithm&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;캐시에 새로운 Block을 로드할 때 어떤 Block을 대체할 것인지에 대한 알고리즘&lt;/p&gt;

&lt;p&gt;Choose which block to replace when a new block is to be loaded into the cahe&lt;/p&gt;

&lt;p&gt;Least Recently Used(LRU) Algorithm: 가장 최근에 덜 사용 된 것을 대체시키는 알고리즘&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Apr 2018 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>MVC, MVP, MVVM</title>
        <link>/2018/04/06/MVC-MVP-MVVM.html</link>
        <guid isPermaLink="true">/2018/04/06/MVC-MVP-MVVM.html</guid>
        <description>&lt;p&gt;&lt;strong&gt;MVC(Model-View-Controller)&lt;/strong&gt;
&lt;img src=&quot;/assets/img/MVC.png&quot; alt=&quot;MVC&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 06 Apr 2018 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>Sample post</title>
        <link>/2014/11/30/sample-post.html</link>
        <guid isPermaLink="true">/2014/11/30/sample-post.html</guid>
        <description>&lt;p&gt;Consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ut gravida lorem.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Consectetur adipiscing elit&lt;/li&gt;
  &lt;li&gt;Donec a diam lectus&lt;/li&gt;
  &lt;li&gt;Sed sit amet ipsum mauris&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ut turpis felis, pulvinar a semper sed, adipiscing id dolor. Pellentesque auctor nisi id magna consequat sagittis. Curabitur dapibus enim sit amet elit pharetra tincidunt feugiat nisl imperdiet. Ut convallis libero in urna ultrices accumsan. Donec sed odio eros. Donec viverra mi quis quam pulvinar at malesuada arcu rhoncus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. In rutrum accumsan ultricies. Mauris vitae nisi at sem facilisis semper ac in est.&lt;/p&gt;

&lt;p&gt;Nunc diam velit, adipiscing ut tristique vitae, sagittis vel odio. Maecenas convallis ullamcorper ultricies. Curabitur ornare, ligula &lt;em&gt;semper consectetur sagittis&lt;/em&gt;, nisi diam iaculis velit, id fringilla sem nunc vel mi. Nam dictum, odio nec pretium volutpat, arcu ante placerat erat, non tristique elit urna et turpis. Quisque mi metus, ornare sit amet fermentum et, tincidunt et orci. Fusce eget orci a orci congue vestibulum.&lt;/p&gt;

&lt;p&gt;Ut dolor diam, elementum et vestibulum eu, porttitor vel elit. Curabitur venenatis pulvinar tellus gravida ornare. Sed et erat faucibus nunc euismod ultricies ut id justo. Nullam cursus suscipit nisi, et ultrices justo sodales nec. Fusce venenatis facilisis lectus ac semper. Aliquam at massa ipsum. Quisque bibendum purus convallis nulla ultrices ultricies. Nullam aliquam, mi eu aliquam tincidunt, purus velit laoreet tortor, viverra pretium nisi quam vitae mi. Fusce vel volutpat elit. Nam sagittis nisi dui.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Suspendisse lectus leo, consectetur in tempor sit amet, placerat quis neque&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam luctus porttitor lorem, sed suscipit est rutrum non. Curabitur lobortis nisl a enim congue semper. Aenean commodo ultrices imperdiet. Vestibulum ut justo vel sapien venenatis tincidunt.&lt;/p&gt;

&lt;p&gt;Phasellus eget dolor sit amet ipsum dapibus condimentum vitae quis lectus. Aliquam ut massa in turpis dapibus convallis. Praesent elit lacus, vestibulum at malesuada et, ornare et est. Ut augue nunc, sodales ut euismod non, adipiscing vitae orci. Mauris ut placerat justo. Mauris in ultricies enim. Quisque nec est eleifend nulla ultrices egestas quis ut quam. Donec sollicitudin lectus a mauris pulvinar id aliquam urna cursus. Cras quis ligula sem, vel elementum mi. Phasellus non ullamcorper urna.&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Nov 2014 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>Feature images</title>
        <link>/2014/11/29/feature-images.html</link>
        <guid isPermaLink="true">/2014/11/29/feature-images.html</guid>
        <description>&lt;p&gt;This is an example of a post which includes a feature image specified in the front matter of the post. The feature image spans the full-width of the page, and is shown with the title on permalink pages.&lt;/p&gt;
</description>
        <pubDate>Sat, 29 Nov 2014 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>Markdown and HTML</title>
        <link>/2014/11/28/markdown-and-html.html</link>
        <guid isPermaLink="true">/2014/11/28/markdown-and-html.html</guid>
        <description>&lt;p&gt;Jekyll supports the use of &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt; with inline HTML tags which makes it easier to quickly write posts with Jekyll, without having to worry too much about text formatting. A sample of the formatting follows.&lt;/p&gt;

&lt;p&gt;Tables have also been extended from Markdown:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;First Header&lt;/th&gt;
      &lt;th&gt;Second Header&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Here’s an example of an image, which is included using Markdown:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample_feature_img_2.png&quot; alt=&quot;Geometric pattern with fading gradient&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Highlighting for code in Jekyll is done using Pygments or Rouge. This theme makes use of Rouge by default.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// count to ten&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// count to twenty&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Type Theme uses KaTeX to display maths. Equations such as &lt;script type=&quot;math/tex&quot;&gt;S_n = a \times \frac{1-r^n}{1-r}&lt;/script&gt; can be displayed inline.&lt;/p&gt;

&lt;p&gt;Alternatively, they can be shown on a new line:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;f(x) = \int \frac{2x^2+4x+6}{x-2}&lt;/script&gt;
</description>
        <pubDate>Fri, 28 Nov 2014 00:00:00 +0900</pubDate>
      </item>
    
  </channel>
</rss>
